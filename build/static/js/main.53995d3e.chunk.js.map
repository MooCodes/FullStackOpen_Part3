{"version":3,"sources":["components/SearchFilter.js","components/Form.js","services/persons.js","components/Phonebook.js","components/Notification.js","App.js","index.js"],"names":["SearchFilter","props","onChange","onFilterChange","Form","onSubmit","onNewPerson","onNameChange","onNumberChange","type","baseUrl","axios","get","then","res","data","newPerson","post","id","put","delete","Person","person","deletePerson","name","number","onClick","style","display","Phonebook","persons","setPersons","map","window","confirm","personService","returnedPersons","console","log","filter","p","Notification","message","className","class","msg","App","useState","newName","setNewName","newNumber","setNewNumber","filterInput","setFilterInput","setMessage","useEffect","initalPersons","e","target","value","preventDefault","exists","forEach","alreadyInPhonebook","find","returnedPerson","catch","err","msgObj","setTimeout","concat","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53995d3e.chunk.js","sourcesContent":["const SearchFilter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input onChange={props.onFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFilter","const Form = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.onNewPerson}>\r\n                <div>\r\n                    name: <input onChange={props.onNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input onChange={props.onNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import axios from 'axios'\r\nconst baseUrl = (process.env.NODE_ENV === 'development') ? 'https://damp-plateau-97459.herokuapp.com/api/persons' : 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import personService from './../services/persons'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} <button onClick={deletePerson} style={{display: \"inline-block\"}}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Phonebook = ({ persons, setPersons }) => {\r\n    const deletePerson = (person) => {\r\n        if (window.confirm(`Are you sure you want to delete ${person.name} from the phonebook?`))\r\n            personService\r\n                .deletePerson(person.id)\r\n                .then(returnedPersons => {\r\n                    console.log(returnedPersons)\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                })\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                persons.map(person => <Person key={person.id} person={person} deletePerson={() => deletePerson(person)} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phonebook","const Notification = (props) => {\r\n    if (props.message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={props.message.class}>\r\n            {props.message.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport SearchFilter from './components/SearchFilter'\nimport Form from './components/Form'\nimport Phonebook from './components/Phonebook'\nimport personService from './services/persons' \nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  \n  const [newName, setNewName] = useState('')\n\n  const [newNumber, setNewNumber] = useState('')\n\n  const [filterInput, setFilterInput] = useState('')\n\n  const [message, setMessage] = useState(null)\n\n  const onNameChange = (e) =>\n    setNewName(e.target.value)\n\n  const onNumberChange = (e) =>\n    setNewNumber(e.target.value)\n\n  const onFilterChange = (e) =>\n    setFilterInput(e.target.value)\n\n  const onNewPerson = (e) => {\n    e.preventDefault()\n\n    const alreadyInPhonebook = (name) => {\n      let exists = false\n      persons.forEach(person => {\n        if (person.name === name)\n          exists = true\n      })\n      return exists\n    }\n\n    if (!alreadyInPhonebook(newName)) {\n      // add person to back-end\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          let msgObj = {\n            msg: `Added ${returnedPerson.name}`,\n            class: 'success'\n          }\n          setMessage(msgObj)\n          \n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n    }\n    else {\n      if (window.confirm(`${newName} has already been added to the phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const newPerson = { ...person, number: newNumber }\n\n        console.log(newPerson)\n\n        personService\n          .update(person.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p))\n          })\n          .catch(err => {\n            console.log('eeeerrr')\n            let msgObj = {\n              msg: `Information of ${person.name} has already been removed from server`,\n              class: 'error'\n            }\n            \n            setMessage(msgObj)\n\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n      }\n    }\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initalPersons => {\n        setPersons(initalPersons)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <SearchFilter onFilterChange={onFilterChange}/>\n      <h3>add a new</h3>\n      <Form \n        onNewPerson={onNewPerson} \n        onNameChange={onNameChange} \n        onNumberChange={onNumberChange} />\n      <h3>Numbers</h3>\n      <Phonebook setPersons={setPersons} persons={persons.filter(p => p.name.includes(filterInput))}/>\n    </div>\n  )\n}\n\nexport default App","import './index.css'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}